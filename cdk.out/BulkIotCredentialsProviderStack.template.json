{
 "Resources": {
  "iotProvisioningS3Bucket5FAA6562": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "AWS::AccountId"
       },
       "-iot-provisioning-bucket"
      ]
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/iotProvisioningS3Bucket/Resource"
   }
  },
  "iotGeneralS3Bucket0F8D155E": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "AWS::AccountId"
       },
       "-iot-bucket-general"
      ]
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/iotGeneralS3Bucket/Resource"
   }
  },
  "iotCustomerS3BucketAbc6A464A89": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "AWS::AccountId"
       },
       "-iot-bucket-server-type"
      ]
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/iotCustomerS3BucketAbc/Resource"
   }
  },
  "iotLocationS3Bucket123B197A487": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "AWS::AccountId"
       },
       "-iot-bucket-location-123"
      ]
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/iotLocationS3Bucket123/Resource"
   }
  },
  "iotLocationS3Bucket4567AEF99A5": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "AWS::AccountId"
       },
       "-iot-bucket-location-456"
      ]
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/iotLocationS3Bucket456/Resource"
   }
  },
  "iotGeneralQueueE2AC0039": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "QueueName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "AWS::AccountId"
       },
       "-iot-queue-general"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/iotGeneralQueue/Resource"
   }
  },
  "iotIndivQueueD463D4E3": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "QueueName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "AWS::AccountId"
       },
       "-iot-queue-location-123"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/iotIndivQueue/Resource"
   }
  },
  "iotGeneralBucketPolicy4A3BD6A4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject",
        "s3:GetObject",
        "s3:ListBucket",
        "s3:PutObject"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "iotGeneralS3Bucket0F8D155E",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "iotGeneralS3Bucket0F8D155E",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:ListAllMyBuckets",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "iotGeneralBucketPolicy",
    "Roles": [
     {
      "Ref": "iotAccessRole69B56948"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/iotGeneralBucketPolicy/Resource"
   }
  },
  "iotIndividualBucketPolicy176E108B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject",
        "s3:GetObject",
        "s3:ListBucket",
        "s3:PutObject"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::Select": [
             0,
             {
              "Fn::Split": [
               "iot-bucket-",
               {
                "Fn::GetAtt": [
                 "iotGeneralS3Bucket0F8D155E",
                 "Arn"
                ]
               }
              ]
             }
            ]
           },
           "iot-bucket-${credentials-iot:ThingName}"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::Select": [
             0,
             {
              "Fn::Split": [
               "iot-bucket-",
               {
                "Fn::GetAtt": [
                 "iotGeneralS3Bucket0F8D155E",
                 "Arn"
                ]
               }
              ]
             }
            ]
           },
           "iot-bucket-${credentials-iot:ThingName}/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::Select": [
             0,
             {
              "Fn::Split": [
               "iot-bucket-",
               {
                "Fn::GetAtt": [
                 "iotGeneralS3Bucket0F8D155E",
                 "Arn"
                ]
               }
              ]
             }
            ]
           },
           "iot-bucket-${credentials-iot:ThingTypeName}/${credentials-iot:ThingName}"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::Select": [
             0,
             {
              "Fn::Split": [
               "iot-bucket-",
               {
                "Fn::GetAtt": [
                 "iotGeneralS3Bucket0F8D155E",
                 "Arn"
                ]
               }
              ]
             }
            ]
           },
           "iot-bucket-${credentials-iot:ThingTypeName}/${credentials-iot:ThingName}/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "iotIndividualBucketPolicy",
    "Roles": [
     {
      "Ref": "iotAccessRole69B56948"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/iotIndividualBucketPolicy/Resource"
   }
  },
  "iotGeneralQueuePolicy302F6752": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "iotGeneralQueueE2AC0039",
         "Arn"
        ]
       }
      },
      {
       "Action": "sqs:ListQueues",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "iotGeneralQueuePolicy",
    "Roles": [
     {
      "Ref": "iotAccessRole69B56948"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/iotGeneralQueuePolicy/Resource"
   }
  },
  "iotIndividualQueuePolicy2C15685D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:sqs:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          "-iot-queue-${credentials-iot:ThingName}"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "iotIndividualQueuePolicy",
    "Roles": [
     {
      "Ref": "iotAccessRole69B56948"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/iotIndividualQueuePolicy/Resource"
   }
  },
  "iotProvisioningPolicy95D92A70": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "iotanalytics:BatchPutMessage",
        "iotevents:BatchPutMessage",
        "iotsitewise:BatchPutAssetPropertyValue"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "iotProvisioningPolicy",
    "Roles": [
     {
      "Ref": "iotProvisioningRoleB89AEAF1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/iotProvisioningPolicy/Resource"
   }
  },
  "iotAccessRole69B56948": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "credentials.iot.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "MaxSessionDuration": 43200,
    "RoleName": "iot-access-role"
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/iotAccessRole/Resource"
   }
  },
  "C9IamRole1AA194C6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "ec2.",
           {
            "Ref": "AWS::URLSuffix"
           }
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AdministratorAccess"
       ]
      ]
     }
    ],
    "RoleName": "cloud9-admin-access-role"
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/C9IamRole/Resource"
   }
  },
  "iotProvisioningRoleB89AEAF1": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "iot.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSIoTRuleActions"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSIoTLogging"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSIoTThingsRegistration"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonS3ReadOnlyAccess"
       ]
      ]
     }
    ],
    "MaxSessionDuration": 43200,
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "iotanalytics:BatchPutMessage",
          "iotevents:BatchPutMessage",
          "iotsitewise:BatchPutAssetPropertyValue"
         ],
         "Effect": "Allow",
         "Resource": "*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "BatchPutMessage"
     }
    ],
    "RoleName": "iot-provisioning-role"
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/iotProvisioningRole/Resource"
   }
  },
  "iotDeployer9477B8BC": {
   "Type": "AWS::IAM::User",
   "Properties": {
    "LoginProfile": {
     "Password": "i0t-deployer-p@33w0rd"
    },
    "UserName": "iot-deployer"
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/iotDeployer/Resource"
   }
  },
  "iotDeployerDefaultPolicyFCB8D5BC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "iam:GetRole",
        "iam:PassRole"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "iotAccessRole69B56948",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "iotDeployerDefaultPolicyFCB8D5BC",
    "Users": [
     {
      "Ref": "iotDeployer9477B8BC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/iotDeployer/DefaultPolicy/Resource"
   }
  },
  "iotRoleAlias": {
   "Type": "AWS::IoT::RoleAlias",
   "Properties": {
    "RoleArn": {
     "Fn::GetAtt": [
      "iotAccessRole69B56948",
      "Arn"
     ]
    },
    "CredentialDurationSeconds": 43200,
    "RoleAlias": "server-access-role-alias"
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/iotRoleAlias"
   }
  },
  "iotAssumeRolePolicy": {
   "Type": "AWS::IoT::Policy",
   "Properties": {
    "PolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Effect": "Allow",
       "Action": "iot:AssumeRoleWithCertificate",
       "Resource": {
        "Fn::GetAtt": [
         "iotRoleAlias",
         "RoleAliasArn"
        ]
       }
      }
     ]
    },
    "PolicyName": "iotAssumeRolePolicy"
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/iotAssumeRolePolicy"
   }
  },
  "VPCB9E5F0B4": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "BulkIotCredentialsProviderStack/VPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/VPC/Resource"
   }
  },
  "VPCPublicSubnet1SubnetB4246D30": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "BulkIotCredentialsProviderStack/VPC/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/VPC/PublicSubnet1/Subnet"
   }
  },
  "VPCPublicSubnet1RouteTableFEE4B781": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "BulkIotCredentialsProviderStack/VPC/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/VPC/PublicSubnet1/RouteTable"
   }
  },
  "VPCPublicSubnet1RouteTableAssociation0B0896DC": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet1SubnetB4246D30"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/VPC/PublicSubnet1/RouteTableAssociation"
   }
  },
  "VPCPublicSubnet1DefaultRoute91CEF279": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ],
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/VPC/PublicSubnet1/DefaultRoute"
   }
  },
  "VPCPublicSubnet1EIP6AD938E8": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "BulkIotCredentialsProviderStack/VPC/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/VPC/PublicSubnet1/EIP"
   }
  },
  "VPCPublicSubnet1NATGatewayE0556630": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "VPCPublicSubnet1SubnetB4246D30"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "VPCPublicSubnet1EIP6AD938E8",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "BulkIotCredentialsProviderStack/VPC/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/VPC/PublicSubnet1/NATGateway"
   }
  },
  "VPCPublicSubnet2Subnet74179F39": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "BulkIotCredentialsProviderStack/VPC/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/VPC/PublicSubnet2/Subnet"
   }
  },
  "VPCPublicSubnet2RouteTable6F1A15F1": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "BulkIotCredentialsProviderStack/VPC/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/VPC/PublicSubnet2/RouteTable"
   }
  },
  "VPCPublicSubnet2RouteTableAssociation5A808732": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet2Subnet74179F39"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/VPC/PublicSubnet2/RouteTableAssociation"
   }
  },
  "VPCPublicSubnet2DefaultRouteB7481BBA": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ],
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/VPC/PublicSubnet2/DefaultRoute"
   }
  },
  "VPCPublicSubnet2EIP4947BC00": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "BulkIotCredentialsProviderStack/VPC/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/VPC/PublicSubnet2/EIP"
   }
  },
  "VPCPublicSubnet2NATGateway3C070193": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "VPCPublicSubnet2Subnet74179F39"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "VPCPublicSubnet2EIP4947BC00",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "BulkIotCredentialsProviderStack/VPC/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/VPC/PublicSubnet2/NATGateway"
   }
  },
  "VPCPrivateSubnet1Subnet8BCA10E0": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "BulkIotCredentialsProviderStack/VPC/PrivateSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/VPC/PrivateSubnet1/Subnet"
   }
  },
  "VPCPrivateSubnet1RouteTableBE8A6027": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "BulkIotCredentialsProviderStack/VPC/PrivateSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/VPC/PrivateSubnet1/RouteTable"
   }
  },
  "VPCPrivateSubnet1RouteTableAssociation347902D1": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
    },
    "SubnetId": {
     "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/VPC/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "VPCPrivateSubnet1DefaultRouteAE1D6490": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCPublicSubnet1NATGatewayE0556630"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/VPC/PrivateSubnet1/DefaultRoute"
   }
  },
  "VPCPrivateSubnet2SubnetCFCDAA7A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "BulkIotCredentialsProviderStack/VPC/PrivateSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/VPC/PrivateSubnet2/Subnet"
   }
  },
  "VPCPrivateSubnet2RouteTable0A19E10E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "BulkIotCredentialsProviderStack/VPC/PrivateSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/VPC/PrivateSubnet2/RouteTable"
   }
  },
  "VPCPrivateSubnet2RouteTableAssociation0C73D413": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
    },
    "SubnetId": {
     "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/VPC/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "VPCPrivateSubnet2DefaultRouteF4F5CFD2": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCPublicSubnet2NATGateway3C070193"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/VPC/PrivateSubnet2/DefaultRoute"
   }
  },
  "VPCIGWB7E252D3": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "BulkIotCredentialsProviderStack/VPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/VPC/IGW"
   }
  },
  "VPCVPCGW99B986DC": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "InternetGatewayId": {
     "Ref": "VPCIGWB7E252D3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/VPC/VPCGW"
   }
  },
  "Cloud9Env": {
   "Type": "AWS::Cloud9::EnvironmentEC2",
   "Properties": {
    "InstanceType": "t3.micro",
    "OwnerArn": "arn:aws:sts::122852224663:assumed-role/AWSReservedSSO_AWSAdministratorAccess_91a9e0e0e1f52be7/yeefei+aws2@amazon.com",
    "Repositories": [
     {
      "PathComponent": "provisioning-template",
      "RepositoryUrl": "https://github.com/ooiyeefei/iot-bulk-provisioning-template"
     }
    ],
    "SubnetId": {
     "Ref": "VPCPublicSubnet1SubnetB4246D30"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/Cloud9Env"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02RTU/DMAyGfwv31IxyAI6lmtAuUDrYFaWpEV7bZOSj0xT1v5M0hXLy68eO/crJIb+DzRU/m0y0XdZTA35vuehYQB/e3IJ/dKJDy8pPmdTEzLcB/+rQYaSzmBjxAXylehKXSBdVq35umuO7QR2TGMMDZcEvpaInbtZnE0ORgz+cRGSHqmSVa0Jh7xqZrKyqVs7iG2/SnsRXVhijBHFLSv41R7HdVTE8c/vELZ75hVWaxiDXwTtpUQf925CcLFlhw5G+BpThHKJXrn2AOFWOpJWMeFvmE6vRKKfFvPHF2ZNLjv/RUsmWoruJSdUiHM31eHMPm/AnR0OUaSctDQh1ij9uhirKrwEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "BulkIotCredentialsProviderStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "Bucket": {
   "Value": {
    "Fn::GetAtt": [
     "iotProvisioningS3Bucket5FAA6562",
     "Arn"
    ]
   }
  },
  "ProvisioningRole": {
   "Value": {
    "Fn::GetAtt": [
     "iotProvisioningRoleB89AEAF1",
     "Arn"
    ]
   }
  },
  "RoleAlias": {
   "Value": {
    "Fn::GetAtt": [
     "iotRoleAlias",
     "RoleAliasArn"
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}